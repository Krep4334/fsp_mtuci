// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–æ–π —Ç–∏–ø –ë–î –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
  const schemaPath = path.join(__dirname, 'server', 'prisma', 'schema.prisma');
  const schema = fs.readFileSync(schemaPath, 'utf8');
  
  const isSQLite = schema.includes('provider = "sqlite"');
  
  if (isSQLite) {
    console.log('üìä –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ SQLite –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö');
    console.log('‚ö†Ô∏è  –î–ª—è SQLite –º–∏–≥—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ Prisma\n');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ Prisma
    console.log('1Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞...');
    execSync('cd server && npx prisma generate', { stdio: 'inherit' });
    
    console.log('\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏...');
    execSync('cd server && npx prisma migrate dev --name make_team_ids_optional --create-only', { stdio: 'inherit' });
    
    console.log('\n3Ô∏è‚É£ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏...');
    execSync('cd server && npx prisma migrate deploy', { stdio: 'inherit' });
    
    console.log('\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!');
  } else {
    console.log('üìä –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ PostgreSQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö');
    console.log('\n–í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∏–∑ —Ñ–∞–π–ª–∞ server/migrate-match-optional.sql –≤—Ä—É—á–Ω—É—é\n');
  }
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
  console.log('\nüìù –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ server/prisma/schema.prisma');
  console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ team1Id –∏ team2Id –æ—Ç–º–µ—á–µ–Ω—ã –∫–∞–∫ String?');
  console.log('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: cd server && npx prisma migrate dev');
}
