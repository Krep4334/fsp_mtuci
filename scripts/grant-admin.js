const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function grantAdmin() {
  try {
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è test
    const email = 'test@test.test';
    const username = 'test';
    
    console.log('üîç –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è test...\n');
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email –∏–ª–∏ username
    const user = await prisma.user.findFirst({
      where: {
        OR: [
          { email },
          { username }
        ]
      }
    });

    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å test –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      console.log('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.');
      process.exit(1);
    }

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:');
    console.log('  Email:', user.email);
    console.log('  Username:', user.username);
    console.log('  –¢–µ–∫—É—â–∞—è —Ä–æ–ª—å:', user.role);
    console.log();

    if (user.role === 'ADMIN') {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!');
      await prisma.$disconnect();
      return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –Ω–∞ ADMIN
    const updatedUser = await prisma.user.update({
      where: { id: user.id },
      data: { role: 'ADMIN' },
      select: {
        id: true,
        email: true,
        username: true,
        firstName: true,
        lastName: true,
        role: true
      }
    });

    console.log('üéâ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω—ã!');
    console.log('üìß Email:', updatedUser.email);
    console.log('üë§ Username:', updatedUser.username);
    console.log('üîê Role:', updatedUser.role);
    console.log();
    console.log('üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('  Username: test');
    console.log('  Email: test@test.test');
    console.log('  Password: testtest');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error.message);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

grantAdmin();
